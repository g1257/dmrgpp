2021-11-19 Version 6.02

Bug fixes

* SVD is now normalized

* checkThatQnsAreNotReallySorted has
been disabled for SDHS (site-dependent
Hilbert Spaces)

* TargetingExpression fixes (Max Sroda)

* observe: sign of fermionic correlations
corrected so that i < j and j > i have
opposite signs.

* termGeometryReplacement bug fix
(the bug did not affect any models, but
see KitaevExtended below)

New features

* Restarting from real to complex is now possible

* TargetingExpression complex scalar support

* Targeting Chebyshev vectors: fix to
correction (Alberto Nocera)

* TargetingRixDynamics: applying two
operators with product is now possible
(Alberto N.)

* TargetingCVEvoluion added (Alberto N.)

* FindSymmetrySector= awesome predicated
added (Pontus L.)

* RecoverySave works with shrinkstacksondisk

* SolverOptions=noClobber

* FirstRitz= line added

* wftstackondisk implemented 
(in order to decrease RAM)

* observe: readOnDemand in SolverOptions=
added (in order to decrease RAM)

* OpOnSiteThreshold= added
(in order to decrease RAM)

Models

* Operator identity available for all models
(Max Sroda)

* KitaevWithCharge implemented (Bradraj P.)

* HubbardHolstein supports more interactions
(Alberto N.)

* FeAs: orbital dependence for interactions added

* FeAs: AnistropyD= line added

* HubbardOneBand: Magnetic field along x added

* Entangler for Heisenberg Spin 1 now works 

* KitaevExtended uses termGeometryReplacement now

* FermionSpinless WithDelta added (Bradraj P.)

Refactoring

* We have deleted more SU(2) related code

TestSuite

* KitaevGamma chain has inputs now

* Ancilla Spin 1 inputs added

* tests added for GeometryValueModifier=

Scripts

* quasiParticleWeightZ.pl added
(Bradraj Pandey)

* vonNeumann.pl support symmetrize by option

* inSituVsOmega.pl added

* matrixRawToAinur.pl added

* procOmegas.pl works with Ainur now

* hubbardEnergyInfiniteT.pl added

* sDotSinKspace.pl added

* nq.pl added

* honeycomb.pl supports WithCharge

* honeycomb.pl supports Ainur and
can compute electrons (Pontus L.)



2021-04-22 Version 6.00

bug fixes:

* DmrgSerializer: bug fix in write

* CorrelationsSkeleton: bug fix when ket != bra

user interface:

* SolverOptions=correctionvectorimagonly added (Alberto Nocera)

* SolverOptions=wftstacksondisk added, but cannot
restart or observe if this features is on

* InputCheck: Work in progress to define all Ainur variables

* TSPOperatorMultiplier is now announced

* TridiagOptions now understands printritz (Shi Feng)

scripts:

* ritz.pl script for processing Ritz eigenvalues (Shi Feng)

* fourleg.pl for processing 2+2 ladders.

observe:

* observe: Printing for two-points now can output
a number, vector, or matrix (Bradraj Pandey)

* observe: ManyPointAction in separate file

* OnePointCorrelations: keep legacy bugs to be consistent
with other correlations

* TwoPointCorrelations: actions implemented

new models:

* HeisenbergAncillaC spin = 1 work in progress

* SpinOrbitalModel added (Nitin Kaushal)

* SU(3) model added (Alberto N.)

* KondoEx2: same as KondoEx but with four more
connections (Jacek Herbrych)

TestSuite:

* ci 1610 for KondoEx (Jacek H.)

* ci 1305: dynamics for spin orbit

* ci 20 and 21: time evolution of the Heisenberg model

* ci 61: observes <Q0|c?0';c?1'|Q1> (Alberto N.)

Engine:

* ModelBase: in debug mode now checks
order of one site basis


2020-12-02 Version 5.76

* ScalingInputFeature: For FiniteLoops, for 
Target quantum numbers, for TSPSites

* HeisenbergMix: new model: spin 1/2 on the border sites

* HubbardHolstein supports OneSiteTruncation now

* HeisenbergAncillaC: spin > 1/2 bug fix, but
Entangler still wrong in paper and pencil

* procOmegas: When undefined value for site, file
is also printed for better debugging

* procOmegas: supports missing P3

* ci: 4702-4706 HubbardHolstein one site trunc.

* SDHS: two point observe supported
(SDHS means site-dependent Hilbert spaces or models
with different kinds of atoms)

* SDHS: one point observations supported

* SDHS: in-situ measurements supported

* OneSiteTruncation in Engine

* ModelBase::postCtor now reentrant

* Model terms can now be cloned

* Model Hilbert size now cached

* FiniteLoop now a class proper and FiniteLoop.cpp deleted

* Entangler.h deleted

* Changes due to boost serialization headers deleted


2020-10-27 Version 5.74

User interface:

* hd5 file not created when minimizeDisk is in SolverOptions

* SolverOptions=h5dontPrint disables
hd5 debugging messages in debug mode

* operator -B -s site
now prints more information about basis
and operators, including names and dofs

* operator -H
now prints Hamiltonian terms

Model Specific:

* Kitaev has splus and sminus now (Shi Feng)

* Heisenberg: operator maximal added (Pontus)

* HolsteinThin: bug fix for operator n (Alberto)

Scripts:

* outSpaceToDos.pl: sort frequencies numerically (Pontus)

* procOmegas.pl: only warn if TSPSite is not center (Alberto)

* procOmegas.pl -c "" for use with manyOmegas C++ driver

* ProcOmegas.h added for cincuenta

* pgfPlot2Sum.pl added: adds two or more
.pgfplots files

* Pgfplot2max.pl added: For each k, prints
the omega for which spectrum is maximal.

* vonNeumann.pl to extract entropies from cout file (Shi Feng)

Drivers:

* ManyOmegas added, and MPI support added for it

Engine work:

* Trackable operators refactored

* DmrgRunner.h

* Statics cleared for cincuenta; DMRG++ is reentrant
(but not yet for observe)

TestSuite and rigs

* kompile rig compiles cincuenta

* tests 4 and 121 fixed

2020-07-31 Version 5.72

Interface changes:

* observe warns if run didn't set first bit of last triplet.

* libdmrgpp.a is a very light library that is now used
by cincuenta

Model Specific:

* HubbardAncilla: na operator

* tjOneOrbital was deleted: use TjMultiOrb with Orbitals=1

* Kondo symmetries (Thanks to Jacek H.)

* Heisenberg: Aklt.h added

New Features:

* TargetingExpression (Thanks to Shi F. and Oscar A.)

* Include input blob in Recovery files

Scripts:

* hd5ToTime.pl: gives real time of hd5 file

* honeycomb.pl: armchair mode support periodicx

* honeycomb.pl script: better interface

* manyOmegas.pl: jobid no longer needed

* script for Fourier space AND time

* betterTimeObs.pl: sort times numerically (Thanks to Pontus)

* pgfplot: Do not overwrite palette.tex or sample.tex

* omegaCuts.pl script added

* sumRule.pl script added for dynamics

* sq.pl script added (static correlations in k-space)

TestSuite

* test 1955 fixed Awesome Predicates

* test 5504 fixed for Chebyshev dynamics (Thanks to Alberto)


2020-03-13 Version 5.70

Bug fixes:

* BatchedGemm: compilation update

* CorrectionVectorAction with complex correction vector

* TST: Extreme operator application

* observe: Undef variable and tiny memory leak fixed

* observe: fixed rightmost site (Thanks to Max)

* observe 3-point bug fix (Thanks to Max)

* procOmegas.pl: read time only if Cheby (Thanks to Pontus)

Refactoring:

* gemmR replaces GEMM everywhere (Thanks to Ed)
GemmRnb= is available but disabled 

New features:

* Compilation: addto basics available in psiTags now

* Support changing TSPTau from one run to next
(Thanks to Pontus)

* observe: special operators use ! (Thanks to Jacek)

* RecoverySave= awesome predicate now (Thanks to Pontus)

* toolboxdmrg can take cout file as input

* SolverOptions= addPidToOutputName is now available (Thanks to Joel)

* ThreadsLevelTwo= now available for nested parallelism

* outSpaceToDos.pl added (Thanks to Bradraj and Rahul)



2020-01-14 Version 5.68

Bug fixes: 

* SEVERE bug corrected in observe; see mailing list for details;
in BlockOffDiag.h::toSparse (Thanks to Max, Jacek, Ed)

* HubbardAncilla: c <---> cdagger

* Recovery: modalStruct restart fix

* Precision -p flag is now honored by all output (Thanks to Bradraj)

Scripts

* procOmegas will NOT do Fourier if -X is given to it. (Thanks to Rahul)


TestSuite

* 3511 is now shorter

* postCi can compare complex matrices

New features:

* Custom operators can now be defined in input file;
operators starting with _ are tracked

* Cheby: can now correct vectors, and accepts
ChebyshevCorrectVector= awesome predicate to
control when to correct (Thanks to Alberto)

* ChemicalH work, but not working yet (Alberto)

* CorrectionVectorAction supports complex correction vector
when useComplex is in use; we need to make sure this
does not interfere with RIXS KrylovTime experimental feature...
(Rahul, Alberto)

New Models

* GaugeSpin model to test ChemicalH features (not ready yet)

Engine work

* ModelLinks --> term.push modified API

* OperatorsCache class added, and transposed operators in
their own class

* BasisWithOperators templated on Basis now.

* ReducedOperators deleted

* Apply Factors deleted, along with other SU(2) stuff

* KroneckerDumper has been unhooked (is anyone using it?)


2019-12-09 Version 5.66

User facing

* 3rd number of the finite loop triplet: only one bit
of bit 1, bit 2, and bit 3 may be set

* TSPApplyTo= input line to deal with Sectors and Excited
in NGSTs.

Engine changes

* Changes by Ed due to changes in CrsMatrix regarding performance

* Diagonalization: Quantum symmetry sector before excited level.

* TargetingGroundState: The guess for diagonalization sums
over all excited states.

* Site-dependent Hilbert spaces (SDHS): only ground state
and in-situ measurements for now. See HolsteinThin model.

* ModelHelperLocal and HamiltonianConnection no
longer depend on symmetry sector

* Eigs of density matrix sorted only once (thanks to Alberto)

New features and models:

* HubbardAncilla supports hot mode

* Braket actions for observe; only for 4-points for now

* HolsteinThin to showcase site dependent Hilbert spaces (SDHS)

Scripts

* Work by Pontus on procOmegas for Excited

* betterTimeObs.pl script by Bradraj

TestSuite

* 5800.ain with complex numbers and Ainur

* manyOmegas supports Ainur inputs

* procOmegas supports Ainur inputs


2019-11-08 Version 5.64

* MultiExcited implemented
but changes are needed

* Multiple sectors implemented,
TargetingMultiQ no longer needed

* Bug fix for Ancilla (bug introduced in March 2019)

* Graphene model implemented

* SolverOptions now a class

2019-09-23 Version 5.62

User facing:

* -S command line option overrides Threads=

* PrintHamiltonianAverage= predicate awesome

* SaveDensityMatrixEigenvalues= predicate awesome

Scripts:

* OmegaUtils: asks if repeated keys found

* honeycomb lattice scripts

performance:

* Basis::setToProduct parallelized

features:

* Model=Heisenberg supports magnetic field in x direction

2019-08-13 Version 5.60

bug fix:

* reducedOperator is now thread safe

* Operators.h: There was a trailing / in hdf5 file

* Ainur: complex matrices need more work

* AUTHORS file added

performance:

* NotReallySort.h now gone, and algorithm should perform way better

* ArrayOfMatStruct allocates only if number of non-zeroes is 
greater than zero

* externalProduct now permutes rows and cols on-the-fly

* OperatorStorage.h : shim for CrsMatrix.h for now, but
will make operator storage more performant in the future

scripts:

* OmegaUtils: support -N or non-negative intensities only

new features

* Entanglers: exact energy written to cout now

* t-J anisotropic model added (Nirav)

* added SolverOptions
noPrintHamiltonianAverage for ancilla evolution runs

2019-06-25 Version 5.58

Scripts:

* procOmegas writes out.space

* OmegaUtils supports open boundary condition

* fromOutSpace performs Fourier transform from out.space

New features:

* TargetingMultQ added

* KondoEx added

* RestartStruct takes new input lines

* RecoverySave and Load supported only by loop

* ./observe -f data.hd5
can now be used instead of ./observe -f input.inp

2019-05-20 Version 5.56

Scripts:

* correlations.pl6 added

* delta delta read and write scripts

* pgfplot.pl: various improvements

* procOmegas: supports Chebyshev

User Interface:

* OuputFile= can now be omitted from input

Bug fixes:

* RashbaSOC: bug fixes

New Features

* Chebyshev non-RIXS now works

* RixsDynamics: supports Chebyshev (more testing needed)

Refactor:

* OneOperatorSpec moved to PsimagLite so Lanczos++ can use it

* KrylovHelper added

* Wft Helper added

TestSuite:

* ci: 4804 and 4808 for RashbaSOC

* ci: 3510-3511 and 3530-3532 for Chebyshev non-RIXS

* ci and postCi now can verify out.spectrum files

2019-04-02 Version 5.54

Scripts:

* fromOutSpectrum.pl: redoes *pgfplots from out.spectrum

* spectrumSum.pl to sum out.spectrum files

User Interface:

* Params for Lanczos for each loop

* MaxMatrixRankStored is now suggested when Lanczos fails

* ChebyshevTransform as a vector of c and d

* OperatorsChangeAll option now at runtime

New Features:

* HubbardOneBandRashbaSOC implemented

* observe for NGSTs: observe p-vectors if saveoption bit set

* multi-site expressions (work in progress)

TestSuite

* test 4800 for HubbardOneBandRashbaSOC

* test 150 for testing input formats

* test 130 for multi-site expressions

Refactoring

* isCanonical is now a model property

* Targeting printNormsAndWeights now in TargetingCommon

* Checkpoint no longer depends on Targeting

* TargetingSelector

* enum class in ProgramGlobals replaces enum

* ObserverHelper: pointer to CoO no longer a member,
but passed to member functions instead

* ObserverHelper: bra and ket no longer members,
but passed to member functions instead


2019-03-07 Version 5.52

Compilation:

* DMRG++ compiles on MacOS

Refactoring:

* Target selection now in TargetSelector

* procOmegas: no longer writes .space and .sq files

Performance:

* WftAccelBlocks improved by Ed

* BlockDiagWf improved by Ed

New Features:

* pgfplot.pl and TeX templates added

* procOmegas: cheby support

* Multi-site Expressions In-Situ: work started

* Intent input line: work started

TestSuite:

* ci: prefer Ainur inputs

* inp2ain to help convert to Ainur inputs


2019-01-31 Version 5.50

Bug fixes:

* Kitaev: bug fix when using gammas

* OperatorSpec: bug fixes for bracketed sites

User interface:

* openblas used by default

* observe: onepoint no longer supported

* bare operator-specs no longer supported
(except for RixsDynamic)

New features:

* CorrectionVector can restart from a previous
CorrectionVector run

* TargetingRixDynamic: cocoon for Cheby
(contributed by Alberto)

Refactoring:

* TargetingCommon: legacy cocoons deleted

* PreOperator classes deleted

* Stages of Targeting now in StageEnum

2019-01-22 Version 5.48

New features:

* TargetingChebyshev: needs cocoon

* Model KitaevWithGammas

* InfiniteLoopeptStates= can be used for restarts

* <bra|ket> with empty op-spec now accepted

* coutAnalysis: prints max and average of each item

Engine:

* TargeParams* clean up

* Targeting* clean up


2019-01-03 Version 5.46

Compilation:

* C++11 required

Model Interface

* LinkProduct* removal and addition of
fillModelLinks with its documentation

Engine

* Operator has fermionOrBoson member
instead of fermionSign

TestSuite:

* ci accepts -e regex

* sanityRig started

2018-12-19 Version 5.44

Developer's interface:

* Changes to Model interface; see the manual for details

User visible:

* Hubbard and related models: sz has correct 0.5 factor now

New features:

* ChebyshevTargeting added but not yet ready (Alberto)

Documentation:

* Operator Expressions now documented in manual
(only canonical ones supported for now)

Build system:

* boost-devel is now a dependency. Only header
files are used; the boost runtime(s) aren't used

2018-12-10 Version 5.42

Bug fixes:

* WARNs about unsupported movements

Features

* Echoes input file in base64 and cmd line

* ModelHeisenberg: anisotropyE added

* Model instrospection via operator executable

Docs

* documentation updated

Scripts

* getInSitu.pl script added

* OmegaUtils: prints also pgfplots

Build System

* configure.pl: can use default config via env

2018-10-25 Version 5.40

Bug fixes:

* minimizeDisk is incompatible with RecoverySave
(reported by Wael)

Performance:

* CorrectionVectorSkeleton: better calR (contributed by Ed)

* coutAnalysis improvements

* timing matrixVectorKron

New defaults:

* KrylovNoAbridge SolverOptions added (KrylovAbridge now the default)

New features:

* shinkStacksOnDisk SolverOptions feature to reduce RAM usage
(requested by Nivav)

* deltaEnergies script added to help convergence studies

2018-09-27 Version 5.38

Bug fixes:

* Recovery: bug fixed. Recovery granularity is N-2

* ModelHubbardMultiBand needed sorting of one-site basis

Performance:

* ArrayOfMatStruct performance work by Ed

* NotReallySort with unordered_map

* NotReallySort with on-the-fly for tensor product of Qns

* Using Array instead of std::vector in some cases to
avoid fill overhead

* Basis::setToProduct performance work

New features:

* Git revision printed if available

* coutAnalysis corrected improved

2018-09-11 Version 5.36

Bug fixes:

* TargetingMetts bug fix

Performance

* Qn::operator== improved

* KronUseLowerPart now default except for BatchedGemm
this should decrease RAM usage

Refactor:

* WFT uses directly the stacks

* NotReallySort: work started to parallelize it

New features:

* Now checks restart consistency for useComplex

* ProgressInUseconds SolverOptions

2018-08-30 Version 5.34

Bug fixes:

* bug fix for 1801

* bug fix for HubbardHolsteinSSH

* bug fix for METTS

* discovered bug in restart for signs which
was fixed in PsimagLite 2.34

Refactor:

* WFT: in preparation for SVD use

* Truncation: in preparation for SVD use in WFT

New features

* Option -S for both dmrg and observe

TestSuite:

* postCi compares RAM usage

2018-08-21 Version 5.32

Bug fixes:

* HubbardHolsteinSSH bug fix

* Kondo bug fix

* AdjustQuantumNumbers bug fix

Refactor:

* Geometry AdditionalData simplified

* Hamiltonian Connections restricted to i < j

New features:

* observe can measure multiple data sets

* Engine supports fermion models not conserving
Ne

TestSuite:

* postCi: default gold directory

* ci 113: like 2 but measures 2 data sets

2018-08-09 Version 5.30

Bug fixes:

* FeAsJzSymmetry: matrix resize fixed

* FeAs model adjustQns fixed (Nitin)

* Truncation: cout printing fixed (Nirav)

* Qn.h saves modal at least once

New features:

* option KronUseLowerPart added (Ed)

* Model=KitaevExtended added (Alberto)

* option saveDensityMatrixEigenvalues added (Nirav)

New defaults:

* option useSvd deleted, option truncationNoSvd added

Build system:

* ConfigBase.psiTag: can override default compiler

* Compiles on a MAC

TestSuite:

* ci: fixed 5800 and 5810 data file

2018-07-31 Version 5.28

* modulo symmetry or k-symmetry
now supported in Engine

* TargetExtra now a vector

* HubbardModelMultiBand uses modulo symmetry and
simulates a ladder as a chain with orbitals

* Kondo Model added

* configure.pl uses PsiTag

* DmrgSerializer saves transform as a BlockDiagonalMatrix

* DmrgSolver saves electrons of one site

* observe: fixed fermionic operators when growing environ

* observe: performance improved

* Term labels can be added to input file.
They must be in order with Term0= as the first one,
Term1= as the second one, etc.

* ci: 112 added like 2 but observe when growing environ

* ci: 1600-1601 trivial tests for Kondo

* postCi: CollectBrakets improved

2018-07-24 Version 5.26

* ci/postci: -su2 instead of -nosu2

* ci: for Holstein and HolsteinSSH

* Changes due to changes to PsimagLite indexOrMinusOne
and Matrix interface

* build system: improvements due to PsiTag improvements

* ModelHelper now inside HamiltonianConnection

* RIXS changes by Alberto

* HubbardHolstein model added by Alberto

* LinkProductStruct now called CachedHamiltoniansLinks

* Qn improvements, no more full sort, only equal/unequal
operator between Qn objects

* Model Interface changed, basis of one-site no longer exposed
basis of one site no longer needs ordering
But backward compatibility order preserved for most models

* LinkProduct* interface changed with virtual base LinkProductBase

2018-07-12 Version 5.24

* ci: 6005 for Kitaev

* postCi: CollectBrakets implemented

* new build system

* KompileRig updated

* fixLegacyBugs SolverOptions added

* MODEL written to data file by IoNg

* Chemicals: work started

* LinkProductBase virtual base

* refactoring HamiltonianConnection
and added ParallelHamiltonianConnection


2018-06-28 Version 5.22

* VectorWithOffsets reads only non-zero sectors

* IoSimple no longer used in DMRG++

* operator driver now prints JMVALUES 2 jtilde mtilde

* ci: 5802 added (JzSymmetry)

* ci: bug fixes

* kompile rig to compile with various setups

* DiskStack now has better implementation

* recovery feature implemented but needs tests and docs

* coutAnalysis counts number of times each item appears


2018-06-19 Version 5.20

* ci: ./dmrg -f input.inp 'n$.txt' feature

* ci: collect brakets implemented

* ci: postCi fixes

* Hybrid space-momentum model added;
but not k-symmetry yet

* Basis: qns indexed by partition not state

* Basis: electronsOld only by sign now

* Qn or QnType traps all quantum number logic

* Model interface changed to accomodate
new quantum number logic

2018-05-21 Version 5.18

* IoNg works except for Recovery

* ci: RIXS tests added

* ci: infrastructure changed

* USE_IO_NG enabled by default

* Kitaev: Magnetic field in x,y,z

* mtune and march compiler switches

* hdf5 -L flag for Ubuntu

* addHamiltonianConnection acceleration
in ModelCommon

* Starting to use PsimagLite::Profiling

2018-05-08 Version 5.16

* IoNg works with observe

* JMVALUES and AngularFactor
no longer read unless using SU(2)

* changes due to PsimagLite's Parallelizer 
API changes

* DenseSparseThreshold= line used
also inside KronUtil

* coutAnalysis with cutoff=0 by default

* VerySparseMatrix updated

* ModelCommon prints time for
addHamiltonianConnection

* IoNg can write NGSTs

2018-04-24 Version 5.14

* IoNg: OutFile= will be rootname only

* IoNg: can restart GS with WFT

* Correction Vector with useComplex
now possible

* advanceOnlyAtBorder is now the default
say advanceUnrestricted not to
restrict advance at borders

* ci: entangles with MatrixVectorOnTheFly

* ci: JMVALUES updated format

* Kitaev Model: corrected connection to 0.5

* no more print() for targets

* tar support and related options deleted

* compiles with clang++

2018-04-16 Version 5.12

* SolverOptions diskstacks and wftStacksInDisk deleted

* Targetting is now Targeting

* manual updated

* IoNg: work in progress

2018-04-06 Version 5.10

* Kitaev model implemented

* Kitaev.tex and input6000.inp

* IoNg serialization work in progress

* compilation with float

* MatrixVectorKron is the default now

* Compiler options printed to cout

* When Lanczos fails prints why

* -Werror no longer a default
  But please keep reporting compilation warnings

* bug fix for complex hoppings
  This only affected useComplex for geometry
  terms with dofs=2 (spin up and spin down with 1 orbital)

2018-03-22 Version 5.08

* i/o API changes

* nFromAkw.pl improvements

* VerySparseMatrix improvements

* Anisotropy in Hubbard model added (optional)

* Needed MaxMatrixRankStored now printed on failure

* omega scripts for open boundary conditions

* tst fix: border sites were printed twice

* correction targeting: bug fix

* wftInPatches is switched to wftInBlocks
  when twositedmrg is used

2018-02-27 Version 5.06

* On February 1st, 2018 a massive
  overuse of RAM was introduced.
  This has been fixed now.

* Basis.h : small memory improvements

* Changes due to CRS improvements

* added coutAnalysis.pl script to analyze output
  to .cout produced by DMRG++

* SU(2) no longer built by default, making
  compilation faster

* DMRG++ now warns if TruncationTolerance
  is used without twositedmrg

* Various improvements to Observables by Nirav

2018-02-20 Version 5.04

* jzSymmetry checks

* SU(2) factors allocated only when using SU(2)

* IoNg work started

2018-02-08 Version 5.02

* ci: added inputs for papers 58, 62, 66 and 68

* wftInBlocks now works for all targets

* wftInPatches acceleration now works
  for onesitedmrg

* BatchedGemm now needs pluginSc

* faster changeOfBasis but older changeOfBasis
  still used when JzSymmetry=1

* KrylovAbridge option added, Abridgement printed

* BatchedGemmPluginSc uses dense or sparse 

2018-01-25 Version 5.00 

* BatchedGemm is ready

* observe 4-point at borders corrected

* nFromAkw script added

* Renyi entropy added

* correction vector: spurious tridiag deleted

* Lanczos reortho

* use lib "." in scripts

* VectorWithffset(s) load/save fixes

* WFT check due to symmetry sector leaks

* 2 regression fixes

* wftInPatches now disallowed
 
2018-01-03 Version 4.70

* InitKronBase: threshold bug fix

* BatchedGemm: PLUGIN_SC implementation
  almost done

* BatchedGemm: mainstream implementation
  needs more work

* Scripts for dynamics added and updated

* Border 4-point marked buggy in some cases

2017-12-20 Version 4.68

* BatchedGemm option added
  Needs PluginSc, work in progress

* wftInBlocks only for ground state

* WFT for twositedmrg is now parallel

* RIXS patches

2017-12-12 Version 4.66

* Wft files in Engine/Wft directory

* wftInBlocks: only with twositedmrg, and
               still doesn't work with NGSTs

* baseStack files are now deleted on normal completion

* Interface to PLUGIN_SC: work in progress

* toolboxdmrg supports -o option

2017-11-30 Version 4.64

* observe compilation fix

* TargetingCorrection, crash fixed

* ci: EnergyAncilla

* ci: test 1801 fixed

* VectorWithOffsets: bug fix for load/save

* WFT: Acceleration with temporary possible

2017-11-27 Version 4.62

- Bug fixes

* bug fix in minimize read/write

- Features

* initKronBase/Hamiltonian/Wft

* observe supports -o

* RIXS static and dynamic

* WftOptions struct

* WFT in patches: tons of work; still not done

- Clean up

* TargetingCorrectionVector uses 
  CorrectionVectorSkeleton

* AFTER/BEFORE_TRANSFORM minimized usage

- TestSuite 

* ci: test 467 fixed

* ci supports -o

* ci.pl: Now copies executables correctly

2017-11-09 Version 4.60

* IMPORTANT: Compilation fix for new gcc

* Ainur related change

* postCi fix

* RIXS Statics and Dynamics improvements
  RIXS is still a feature in development

* VectorWithOffset(s) stores qn

* TSPUseQns no longer needed, easier to
  guess symmetry sector for WFT

* DONT_MIX deleted

2017-09-20 Version 4.58

* rixs static bug fixes

* diskstacks option to store
  stacks to disk and use less RAM

* Ainur related changes and added samples

2017-09-05 Version 4.56

* bug fix: braket names for NGSTs

* tests 4600 and 4601 added

2017-08-28 Version 4.54

* Targeting common: printing fixed

* dmrg driver accepts -o solver_options

* operator driver accepts -e canonical_expression

* observe: 2-points fixed for complex numbers

* WFT transform in block diagonal form

* correlationsSymmetry.pl added to check
  symmetry of correlation matrix

* continuous integration (ci) improvements

* fixed assert in encodeQuantumNumber

* rows() and cols() for most matrix types

2017-08-07 Version 4.52

* Kron optimizations

* useSvd should work now

* operator driver bug fixed

* TestSuite: improvements to ci and postCi

* TestSuite: new tests for papers

* KMH model regression is marked but not fixed

* toolboxdmrg action analysis

* BlockDiagonalMatrix improvements

* $ character in operator specs

* HeisenbergAnisotropic implemented

* TargetingInSitu added

* Feature Proposal: Tracking Unnatural Operators

* manual: Braket specifications

* Operator Expressions: canonical expr. implemented

* Preparation for WFT in patches

* Ainur input system: very early usage

* enums become named

* Rixs is ready for tests


2017-06-15 Version 4.50

* Standalone input label DenseSparseThreshold

* DensityMatrix: Returns BlockDiagonalMatrix

* KronUtil: more function in same compilation unit
  to improve inlining

* MatrixDenseOrSparse.h now in KronUtil

* linker time optimizations for gcc

2017-06-08 Version 4.48

* DenseSparseThreshold label

* useSvd supports vectorwithoffsets

2017-05-25 Version 4.46

* useSvd (but not yet for vectorWithOffsets or
  more than 1 target)

* useSvd pthreads

* Lanczos: saves LanczosVectors by the default
    
    Internally lotaMemory=true is the default
    prefix + NoSaveLanczosVectors=1
    should be used to have Lanczos not save vectors

2017-05-18 Version 4.44

* bug fix in printing

* changes in preparation for useSvd option

* Kron: KronNoLoadBalance SolverOptions added

* PTHREAD_ASSIGN_AFFINITIES removed, now a runtime option

* KronUtil: supports useComplex

2017-05-11 Version 4.42

* extendedPrint SolverOptions added

* SolverOptions useSvd added, but not working yet

* SuperExtendedHubbard1Orb: includes spin orbit

* configure.pl does not generate sources
  by default anymore. All DmrgDriver*.cpp files
  are now commited

2017-05-04 Version 4.40

* Kron:

	- bug fix for fermion sign
	- changes to KronUtil
	- KronUtil Makefile created by configure.pl
	- does not support SU(2)
	- weights for load balancing

* MatrixDenseOrSparse: 50% cutoff

* PsiApp used by dmrg and observe drivers

* observe: compilation in parallel

* option printmatrix

* ci: -nosu2 option added


2017-04-24 Version 4.38

* observe:
	- bug fix when <bra|operators|ket>
	- 5 or more points supported with
	  fixed sites

* postCi: detects energy changes, no files

* ci: -S option allows to run on command line
      or batch

* Makefile: -lblas -llapack

* announce when ifdef OPERATORS_CHANGE_ALL

* Kron and KronUtil:
	- additional checks
	- bug fix in offsets
	- bug fix for in and out vectors
	- bug fix in estimate_kron_cost

